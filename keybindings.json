// Place your key bindings in this file to override the defaults
/*
    {
        "key": "",
        "command": "",
        "when": "",
    },
*/
[
	// Quick Open Nav
	{
		"key": "ctrl+n",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+p",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+n",
		"command": "extension.vim_ctrl+n",
		"when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode' && !inQuickOpen"
	},
	{
		"key": "ctrl+p",
		"command": "extension.vim_ctrl+p",
		"when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode' && !inQuickOpen"
	},
	{
		"key": "ctrl+w",
		"command": "workbench.action.closeActiveEditor"
	},

	// Sidebar

	{
		"key": "j",
		"command": "list.focusAnyDown",
		"when": "sideBarFocus && !inputFocus"
	},
	{
		"key": "k",
		"command": "list.focusAnyUp",
		"when": "sideBarFocus && !inputFocus"
	},

	// Explorer

	{
		"key": "a",
		"command": "workbench.files.action.createFileFromExplorer",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "f",
		"command": "workbench.files.action.createFolderFromExplorer",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "c",
		"command": "filesExplorer.copy",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "x",
		"command": "filesExplorer.cut",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "p",
		"command": "filesExplorer.paste",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "d",
		"command": "moveFileToTrash",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "r",
		"command": "renameFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "g y",
		"command": "copyFilePath",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "y",
		"command": "copyRelativeFilePath",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},

	// Sidebar visibility
	{
		"key": "ctrl+n",
		"command": "workbench.action.toggleSidebarVisibility"
	},
	{
		"key": "ctrl+n",
		"command": "workbench.action.focusSideBar",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+n",
		"command": "workbench.action.toggleSidebarVisibility",
		"when": "editorFocus && sideBarVisible"
	},

	// Scrolling popup

	{
		"key": "h",
		"command": "editor.action.scrollLeftHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "j",
		"command": "editor.action.scrollDownHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "k",
		"command": "editor.action.scrollUpHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "l",
		"command": "editor.action.scrollRightHover",
		"when": "editorHoverFocused"
	},

	// Terminal

	{
		"key": "ctrl+shift+t",
		"command": "workbench.action.togglePanel"
	},
	{
		"key": "ctrl+shift+n",
		"command": "workbench.action.terminal.new",
		"when": "terminalIsOpen && terminalFocus"
	},
	{
		"key": "ctrl+n",
		"command": "workbench.action.terminal.focusNext",
		"when": "terminalIsOpen && terminalFocus"
	},
	{
		"key": "ctrl+p",
		"command": "workbench.action.terminal.focusPrevious",
		"when": "terminalIsOpen && terminalFocus"
	},
	{
		"key": "ctrl+q",
		"command": "workbench.action.terminal.kill",
		"when": "terminalIsOpen && terminalFocus"
	},

	// Search & Replace

	{
		"key": "ctrl+h",
		"command": "actions.find",
		"when": "editorFocus && editorIsOpen"
	},
	{
		"key": "ctrl+h",
		"command": "closeFindWidget",
		"when": "editorFocus && editorIsOpen && findWidgetVisible"
	},
	{
		"key": "ctrl+shift+h",
		"command": "editor.action.startFindReplaceAction",
		"when": "editorFocus && editorIsOpen"
	},
	{
		"key": "ctrl+n",
		"command": "editor.action.nextMatchFindAction",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "ctrl+p",
		"command": "editor.action.previousMatchFindAction",
		"when": "editorFocus && findWidgetVisible"
	},

	// Autocompletion Navigation
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetVisible"
	}
]
